version: '3.8'

services:
  db:
    image: postgres:14-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: test_db
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./docker/postgres-init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"

  backend:
    build: ./backend
    ports:
      - "3000:3000"
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=test_db
      - DB_USER=postgres
      - DB_PASSWORD=postgres
    depends_on:
      - db
    volumes:
      - ./coverage:/app/coverage
  frontend:
    build:
      context: ./projnextauth
    ports:
      - "3001:3001"
    environment:
      NEXTAUTH_SECRET: teste9999999
      NEXTAUTH_URL: http://localhost:3001
      BACKEND_URL: http://backend:3000
    depends_on:
      - backend
  # jest:
  #   build:
  #     context: ./backend
  #   command: ["npm", "run", "test"]
  #   environment:
  #     DB_HOST: db
  #     DB_NAME: test_db
  #     DB_USER: postgres
  #     DB_PASSWORD: postgres
  #   depends_on:
  #     - db

  playwright:
    build:
      context: ./playwright
    environment:
      BASE_URL: http://frontend:3001
    depends_on:
      - frontend

  cucumber:
    build:
      context: ./hellocucumber
    environment:
      BASE_URL: http://frontend:3001
    depends_on:
      - frontend
  pg-sonar:
    image: postgres:13
    container_name: pg-sonar
    restart: always
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
      POSTGRES_DB: sonar
    volumes:
      - postgresql_sonar:/var/lib/postgresql/data

  sonarqube:
    image: sonarqube:9.9.8-community
    container_name: sonarqube
    ports:
      - "9000:9000"
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://pg-sonar:5432/sonar
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
    depends_on:
      - pg-sonar
    volumes:
      - sonarqube_conf:/opt/sonarqube/conf
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions

volumes:
  pgdata:
  postgresql_sonar:
  sonarqube_conf:
  sonarqube_data:
  sonarqube_extensions:
